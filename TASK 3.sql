
-- Task 3 - GroupBy, Aggregate Functions, Having, Order By, where --

-- 14) Find the total number of couriers handled by each employee.

SELECT
    e.EmployeeID,
    e.Name AS EmployeeName,
    COUNT(c.CourierID) AS TotalCouriersHandled
FROM EmployeeTable e
LEFT JOIN Courier c ON e.EmployeeID = c.EmployeeID
GROUP BY e.EmployeeID, e.Name;

-- 15) Calculate the total revenue generated by each location.
 
SELECT
	l.LocationID, 
    l.LocationName, 
    SUM(p.Amount) as TotalRevenueGenerated
FROM LocationTable as l
LEFT JOIN PaymentTable as p
ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName;
    
    
-- 16) Find the total number of couriers delivered to each location.

SELECT
	l.LocationID, l.LocationName, COUNT(c.CourierID) as TotalCouriersDelivered
FROM LocationTable as l
LEFT JOIN Courier as c
ON l.LocationID = c.LocationID
GROUP BY l.LocationID, l.LocationName;

	 
-- 17) Find the courier with the highest average delivery time:

SELECT
    c.CourierID,
    AVG(DATEDIFF(c.DeliveryDate, p.PaymentDate)) AS AvgDeliveryTime
FROM Courier c
JOIN PaymentTable p ON c.CourierID = p.CourierID
GROUP BY c.CourierID
HAVING AvgDeliveryTime IS NOT NULL -- To filter out couriers with no deliveries
ORDER BY AvgDeliveryTime DESC
LIMIT 1;

-- 18) Find Locations with Total Payments Less Than a Certain Amount


SELECT
	l.LocationID, l.LocationName, SUM(p.Amount) as TotalPayment
FROM Locationtable as l
JOIN PaymentTable as p
ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName
HAVING TotalPayment < 60;


-- 19) Calculate Total Payments per Location

SELECT
	l.LocationID, l.LocationName, SUM(p.Amount) as TotalPayments
FROM LocationTable as l
JOIN PaymentTable as p
ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName;

set sql_safe_updates = 0;


-- 20) Retrieve couriers who have received payments totaling more than $1000 in a specific location (LocationID = X):

SELECT
    c.CourierID,
    c.SenderName,
    c.SenderAddress,
    c.Status,
    c.TrackingNumber,
    c.DeliveryDate,
    p.Amount AS TotalPayments
FROM Courier c
JOIN PaymentTable p ON c.CourierID = p.CourierID
WHERE c.LocationID = 2
GROUP BY c.CourierID, c.SenderName, c.SenderAddress, c.ReceiverName, c.ReceiverAddress, c.Weight, c.Status, c.TrackingNumber, c.DeliveryDate, p.Amount
HAVING SUM(p.Amount) > 1000;

-- 21) Retrieve couriers who have received payments totaling more than $1000 
-- after a certain date (PaymentDate > 'YYYY-MM-DD'):

SELECT
    c.CourierID,
    c.SenderName,
    c.SenderAddress,
    c.Status,
    c.TrackingNumber,
    c.DeliveryDate,
    SUM(p.Amount) AS TotalPaymentsReceived
FROM Courier c
JOIN PaymentTable p ON c.CourierID = p.CourierID
WHERE p.PaymentDate > '2024-01-12'
GROUP BY c.CourierID
HAVING TotalPaymentsReceived > 1000;

-- 22. Retrieve locations where the total amount received is more than $5000 
-- before a certain date (PaymentDate > 'YYYY-MM-DD')

SELECT
    l.LocationID,
    l.LocationName,
    l.Address,
    SUM(p.Amount) AS TotalAmountsReceived
FROM LocationTable l
JOIN PaymentTable p ON l.LocationID = p.LocationID
WHERE p.PaymentDate > '2024-01-10'
GROUP BY l.LocationID, l.LocationName, l.Address
HAVING TotalAmountsReceived > 5000;

